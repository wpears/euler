function digitSum(str){
  return str.toString().split('').reduce(function(a,b){return +a + +b})
}

/***function bigPow(b,p){
  ***var start = 1;
  ***var tot = b;
  ***if(p>2) return bigPow(bigPow(b,p/2),2) 
  ***while (start < p){
    ***tot = bigMult(tot,b)
    ***start++;
  ***}
  ***return tot;
}


function bigPow(b,p){
  var start = 1;
  var tot = b;
  while (start < p){
    tot = bigMult(tot,b)
    start++;
  }
  return tot;
}

function bigMult(x,y){
  x = x.toString();
  y = y.toString()
  var toAdd =[];
  var offset = '';
  for(var i = y.length-1;i>=0;i--){
   var currY = y[i];
   var digRes = '';
   var carry = 0;
   for(var j = x.length-1;j>=0;j--){
     var currX = x[j];
     var currProd = currX*currY + carry;
     digRes = currProd%10 +digRes;
     carry = currProd/10 >>0
   }
   if(carry)digRes = carry + digRes;
   toAdd.push(digRes+offset);
   offset +='0'
  }
  return toAdd.reduce(bigAdd)
}

function bigAdd(a,b){
  a = a.toString();
  b = b.toString()
  var res = '';
  var carry = 0;
  var ai = a.length-1;
  var bi = b.length-1;
  while(ai>=0&&bi>=0){
    var curr = +a[ai] + +b[bi] + carry;
    var digit = curr%10;
    if (curr > 9){
      carry = 1
    }else carry = 0;
    res = digit + res;
    ai--;
    bi--;
  }
  var rem = a.slice(0,ai+1) + b.slice(0,bi+1);
  if(carry) rem = bigAdd(rem,carry.toString())
  return res = rem + res;
}